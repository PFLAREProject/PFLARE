ARG BASE_IMAGE=stevendargaville/petsc_cuda_kokkos_ci

FROM ${BASE_IMAGE}
# Checkout the main branch by default
ARG BRANCH=main
# Use the optimised petsc build by default
ARG ARCH=arch-linux-c-opt

LABEL maintainer="Steven Dargaville"
LABEL description="PFLARE_cuda_kokkos"

ENV CHECKOUT_BRANCH=$BRANCH
ENV PETSC_ARCH=$ARCH

# This turns on checks between kokkos and cpu versions
ENV PFLARE_KOKKOS_DEBUG=1
# Ensure any test failures are caught and the build fails
# Also force any test that can to use the kokkos types
# Many tests will output a warning that some of these options are unused but that can be ignored
# Also our CI build uses an old mpich that doesn't support gpu aware mpi so we have to turn it off
ENV PETSC_OPTIONS="-on_error_abort -mat_type aijkokkos -vec_type kokkos -dm_mat_type aijkokkos -dm_vec_type kokkos -use_gpu_aware_mpi 0"

WORKDIR /build

# Clone PFLARE - we don't actually run the tests here
# We do that in our yml file so we can run the tests with the --gpus flag
RUN set -e; \
    echo "Cloning branch: ${CHECKOUT_BRANCH}" && \
    git clone --branch ${CHECKOUT_BRANCH} https://github.com/stevendargaville/PFLARE.git && \
    cd PFLARE && \
    make && make build_tests

WORKDIR /build/PFLARE
