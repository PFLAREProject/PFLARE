name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:       

jobs:
  setup:
    runs-on: ubuntu-22.04
    outputs:
      branch: ${{ steps.determine_branch.outputs.branch }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Determine branch
        id: determine_branch
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "branch=${{ github.event.pull_request.head.ref }}" >> $GITHUB_OUTPUT
          else
            echo "branch=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          fi

      - name: free disk space
        run: |
          docker system prune --volumes -af            

  gnu_debug:
    runs-on: ubuntu-22.04
    needs: setup
    env:
      BRANCH: ${{ needs.setup.outputs.branch }}
    steps:
      - name: Build Docker image with debug PETSc
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64
          push: false
          file: ./dockerfiles/Dockerfile
          build-args: |
            BRANCH=${{ env.BRANCH }}
            ARCH=arch-linux-c-debug

  gnu_opt:
    runs-on: ubuntu-22.04
    needs: setup
    env:
      BRANCH: ${{ needs.setup.outputs.branch }}
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}      
      - name: Build Docker image for pull requests
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          file: ./dockerfiles/Dockerfile
          tags: stevendargaville/pflare:latest
          build-args: |
            BRANCH=${{ env.BRANCH }}
            ARCH=arch-linux-c-opt

  gnu_opt_64_bit:
    runs-on: ubuntu-22.04
    needs: setup
    env:
      BRANCH: ${{ needs.setup.outputs.branch }}
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}        
      - name: Build Docker image for pull requests with 64-bit PETSc
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          file: ./dockerfiles/Dockerfile_64_bit
          tags: stevendargaville/pflare_64_bit:latest
          build-args: |
            BRANCH=${{ env.BRANCH }}
            ARCH=arch-linux-c-opt

  gnu_opt_kokkos:
    runs-on: ubuntu-22.04
    needs: setup
    env:
      BRANCH: ${{ needs.setup.outputs.branch }}
    steps:
      - name: Build Docker image with KOKKOS and PETSc
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64
          push: false
          file: ./dockerfiles/Dockerfile_kokkos
          build-args: |
            BRANCH=${{ env.BRANCH }}
            ARCH=arch-linux-c-opt      
            
  gnu_opt_64_bit_kokkos:
    runs-on: ubuntu-22.04
    needs: setup
    env:
      BRANCH: ${{ needs.setup.outputs.branch }}
    steps:
      - name: Build Docker image with KOKKOS and 64-bit PETSc
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64
          push: false
          file: ./dockerfiles/Dockerfile_kokkos
          build-args: |
            BRANCH=${{ env.BRANCH }}
            ARCH=arch-linux-c-opt-64bit           

  nvidia_opt:
    runs-on: ubuntu-22.04
    needs: setup
    env:
      BRANCH: ${{ needs.setup.outputs.branch }}
    steps:
      - name: Build Docker image with PETSc and NVIDIA compilers
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64
          push: false
          file: ./dockerfiles/Dockerfile_nvidia
          build-args: |
            BRANCH=${{ env.BRANCH }}
            ARCH=arch-linux-nvidia
            
  intel_opt_no_test:
    runs-on: ubuntu-22.04
    needs: setup
    env:
      BRANCH: ${{ needs.setup.outputs.branch }}
    steps:
      - name: Build Docker image with PETSc and Intel
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64
          push: false
          file: ./dockerfiles/Dockerfile_intel
          build-args: |
            BRANCH=${{ env.BRANCH }}
            ARCH=arch-linux-intel

  # ~~~~~~~~~~~~~
  # Seperate the GPU builds into two steps - build and run
  # ~~~~~~~~~~~~~
  # Build the gpu on github free runners
  build_gnu_opt_gpu:
    runs-on: ubuntu-22.04
    needs:  [setup]
    # This conditional ensures the job only runs when manually triggered
    if: github.event_name == 'workflow_dispatch'
    # Specify the protected environment to ensure gpu builds are only triggered 
    # by the correct people
    environment: protected-manual-builds              
    env:
      BRANCH: ${{ needs.setup.outputs.branch }}
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}        
      # This won't actually run the tests, for the Dockerfile_cuda_kokkos
      # image we need to run the tests in the next step
      - name: Build Docker image with KOKKOS and PETSc with GPU
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64
          # Always push this to dockerhub
          push: true
          file: ./dockerfiles/Dockerfile_cuda_kokkos
          # Tag this so we pick it up in the next step
          tags: stevendargaville/pflare_gpu:latest
          build-args: |
            BRANCH=${{ env.BRANCH }}
            ARCH=arch-linux-c-opt      

  # Run the gpu tests on the gpu runner
  run_gnu_opt_gpu:
    runs-on: ubicloud-gpu
    # Only runs the gpu tests if the build succeeds
    needs:  build_gnu_opt_gpu
    # This conditional ensures the job only runs when manually triggered
    if: github.event_name == 'workflow_dispatch'    
    # Specify the protected environment to ensure gpu builds are only triggered 
    # by the correct people
    environment: protected-manual-builds    
    env:
      BRANCH: ${{ needs.setup.outputs.branch }}
    steps:
      # Currently our GPU CI only has a single GPU so we can't run the parallel tests
      # Check it sees the gpu by running nvidia-smi
      - name: Run Docker image with explicit --gpus flag
        run: |
         docker run --rm --gpus all stevendargaville/pflare_gpu:latest bash -c "
         set -e  # Exit immediately if a command fails
         echo '=== GPU Information ==='
         nvidia-smi
         echo '=== Running Tests ==='
         make tests_serial
         "